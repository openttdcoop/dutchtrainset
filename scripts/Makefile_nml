ifdef USE_NML

$(patsubst %.grf,%.src.dep,$(GRF_FILES)):
	$(_E) "[DEP] $@"
ifeq ($(DEP_CHECK_TYPE),normal)
	$(_V) $(CC) -C -M -MF $@ -E -MT $@ -MT $@ - < $(SRC_DIR)/$(patsubst %.src.dep,%.pnml,$@)
	$(_V) echo "$@: $(patsubst %.src.dep,$(SRC_DIR)/%.pnml,$@)" >> $@
endif
ifeq ($(DEP_CHECK_TYPE),mdep)
	# TODO: implement graphics file detection for NML style files. It fails with current mdep in NML files
	$(_V) $(SCRIPT_DIR)/mdep.py --target=$@ -I$(SRC_DIR) -Itemplates $(patsubst %.src.dep,%.pnml,$@) >> $@
endif


test::
	$(_E) "nml:                          $(NML) $(NML_FLAGS)"
	$(_E) "Language files:               $(LANG_FILES)"
    
$(TAG_FILENAME): $(REV_FILENAME)
	$(_E) "[LANG] $@"
	$(_V) echo "VERSION  :$(VERSION_STRING)" > $@
	$(_V) echo "TITLE    :$(REPO_TITLE)" >> $@
	$(_V) echo "FILENAME :$(TARGET_FILES)" >> $@

%.grf: %.nml $(REV_FILENAME) $(TAG_FILENAME) %.gfx.dep
	$(_E) "[NML] $@"
	$(_V) $(NML) $(NML_FLAGS) --grf $@ $<

endif # project_type == NML

# NML projects can define a custom_tags.txt which supplies additional
# replacements for strings. Write that during the dep check.
%.$(REV_FILENAME):
	$(_V) echo "VERSION  :$(VERSION_STRING)" > $(FILE_CUSTOM_TAGS)
	$(_V) echo "TITLE    :$(REPO_TITLE)" >> $(FILE_CUSTOM_TAGS)
	$(_V) echo "FILENAME :$(TARGET_FILES)" >> $(FILE_CUSTOM_TAGS)

%.nml: %.pnml $(REV_FILENAME) %.src.dep
	$(_E) "[CPP] $@"
	$(_V) $(CC) -D REPO_REVISION=$(REPO_REVISION) $(CC_FLAGS) $< > $@


