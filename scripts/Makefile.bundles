$(DIR_NAME): $(MAKEFILE_DEP) $(BUNDLE_FILES)
	$(_E) "[BUNDLE]"
	$(_E) "[ASSEMBLING] $@"
	$(_V) if [ -e $@ ]; then rm -rf $@; fi
	$(_V) mkdir $@
	$(_V) -for i in $(BUNDLE_FILES); do cp $(CP_FLAGS) $$i $@; done

%.tar: %
# Create the release bundle with all files in one tar
	$(_E) "[TAR] $@"
	$(_V) $(TAR) $(TAR_FLAGS) $@ $(basename $@)

bundle: $(DIR_NAME)
bundle_tar: $(TAR_FILENAME)
bundle_zip: $(ZIP_FILENAME)
%.zip: $(DIR_NAME)
	$(_E) "[ZIP] $@"
	$(_V) $(ZIP) $(ZIP_FLAGS) $@ $< >/dev/null
bundle_bzip: $(BZIP_FILENAME)
%.tar.bz2: %.tar
	$(_E) "[BZIP] $@"
	$(_V) $(BZIP) $(BZIP_FLAGS) $^
bundle_gzip: $(GZIP_FILENAME)
# gzip has no option -k, so we cat the tar to keep it
%.tar.gz: %.tar
	$(_E) "[GZIP] $@"
	$(_V) cat $^ | $(GZIP) $(GZIP_FLAGS) > $@
bundle_xz: $(XZ_FILENAME)
%.tar.xz: %.tar
	$(_E) "[XZ] $@"
	$(_V) $(XZ) $(XZ_FLAGS) $^

# Installation process
install: $(DIR_NAME)
	$(_E) "[INSTALL] to $(INSTALL_DIR)"
	$(_V) install -d $(INSTALL_DIR)
	$(_V) install -m644 $(TARGET_FILES) $(INSTALL_DIR)
ifdef INSTALLDIR
	$(_E) [Warning] The use of 'INSTALLDIR' is deprecated and may be removed in the future.
	$(_E) [Warning] Use 'INSTALL_DIR' instead.
endif
ifndef DO_NOT_INSTALL_DOCS
ifneq ($(filter-out $(LICENSE_FILE) $(CHANGELOG_FILE),$(DOC_FILES)),)
	$(_E) [INSTALL] docs to $(DOCDIR)
	$(_V) install -d $(DOCDIR)
	$(_V) install -m644 $(filter-out $(LICENSE_FILE) $(CHANGELOG_FILE),$(DOC_FILES)) $(DOCDIR)
endif
endif
ifndef DO_NOT_INSTALL_LICENSE
ifneq ($(LICENSE_FILE),)
	$(_E) [INSTALL] license to $(DOCDIR)
	$(_V) install -d $(DOCDIR)
	$(_V) install -m644 $(LICENSE_FILE) $(DOCDIR)
endif
endif
ifndef DO_NOT_INSTALL_CHANGELOG
ifneq ($(CHANGELOG_FILE),)
	$(_E) [INSTALL] changelog to $(DOCDIR)
	$(_V) install -d $(DOCDIR)
	$(_V) install -m644 $(CHANGELOG_FILE) $(DOCDIR)
endif
endif



md5: $(MD5_FILENAME)

# OSX md5 programm generates slightly different output. Aleviate that by throwing some sed on all output:
%.md5: $(TARGET_FILES)
	$(_E) "[MD5] $@"
	$(_V) $(MD5SUM) $(TARGET_FILES) | sed "s/  / /;s/ /  /" > $@

# OSX md5 programm generates slightly different output. Aleviate that by throwing some sed on all output:
check: $(MD5_FILENAME)
	$(_V) if [ -f $(MD5_SRC_FILENAME) ]; then echo "[CHECKING md5sums]"; else echo "Required file '$(MD5_SRC_FILENAME)' which to test against not found!"; false; fi
	$(_V) if [ -z "`diff $(MD5_FILENAME) $(MD5_SRC_FILENAME)`" ]; then echo "No differences in md5sums"; else echo "Differences in md5sums:"; echo "`diff $(MD5_FILENAME) $(MD5_SRC_FILENAME)`"; false; fi

bundle_src: bundle_gsrc
	$(_E) "Target '$@' is depreciated, it depends on '$<', other types are: 'bundle_bsrc' (tar.bz2), 'bundle_gsrc' (tar.gz), 'bundle_xsrc' (tar.xz), 'bundle_zsrc' (zip)"
bundle_bsrc: $(DIR_NAME_SRC).tar.bz2
bundle_gsrc: $(DIR_NAME_SRC).tar.gz
bundle_xsrc: $(DIR_NAME_SRC).tar.xz
bundle_zsrc: $(DIR_NAME_SRC).zip

$(DIR_NAME_SRC): $(REV_FILENAME) $(MD5_SRC_FILENAME)
	$(_E) "[ASSEMBLING] $(DIR_NAME_SRC)"
	$(_V) rm -rf $(DIR_NAME_SRC) $(DIR_NAME_SRC).tar.gz
	$(_V) mkdir -p $(DIR_NAME_SRC)
	$(_V) mkdir -p $(addprefix $(DIR_NAME_SRC)/,$(shell for i in $(REPO_DIRS); do for j in $(MAIN_DIRS); do echo $$i | grep -E "^$$j"; done; done))
	$(_V) for k in `for i in $(REPO_FILES); do for j in $(MAIN_DIRS); do echo "$$i" | grep -E "^$$j" | grep -E -v $(FILES_NOT_PACK_RE); done; done;`; do cp $(CP_FLAGS) $$k $(addprefix $(DIR_NAME_SRC)/,$$k); done
	$(_V) for k in `for i in $(REPO_FILES); do echo "$$i" | grep -v "/" | grep -E -v $(FILES_NOT_PACK_RE); done;`; do cp $(CP_FLAGS) $$k $(DIR_NAME_SRC); done
	$(_V) cp $(CP_FLAGS) $(MD5_SRC_FILENAME) $(DIR_NAME_SRC)
	$(_V) echo -e "# This file is auto generated to make source bundle independent from Mercurial repository.\n" > $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'REPO_REVISION = $(REPO_REVISION)' >> $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'REPO_BRANCH = $(REPO_BRANCH)' >> $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'REPO_MODIFIED = $(REPO_MODIFIED)' >> $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'REPO_TAGS    = $(REPO_TAGS)'    >> $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'HG = :' >> $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'REPO_FILES = $(REPO_FILES)' >> $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'REPO_DIRS = $(REPO_DIRS)' >> $(DIR_NAME_SRC)/Makefile.dist
	$(_V) echo 'DEP_CHECK_TYPE = normal' >> $(DIR_NAME_SRC)/Makefile.dist

$(INSTALL_DIR):
	$(_E) "[WRITING]"
	$(_V) mkdir -p $(INSTALL_DIR)
